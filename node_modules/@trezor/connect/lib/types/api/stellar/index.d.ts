import { PROTO } from '../../../constants';
import { Static } from '@trezor/schema-utils';
export type StellarAsset = Static<typeof StellarAsset>;
export declare const StellarAsset: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
    code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export type StellarCreateAccountOperation = Static<typeof StellarCreateAccountOperation>;
export declare const StellarCreateAccountOperation: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"createAccount">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    destination: import("@sinclair/typebox").TString;
    startingBalance: import("@sinclair/typebox").TString;
}>;
export type StellarPaymentOperation = Static<typeof StellarPaymentOperation>;
export declare const StellarPaymentOperation: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"payment">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    destination: import("@sinclair/typebox").TString;
    asset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    amount: import("@sinclair/typebox").TString;
}>;
export type StellarPathPaymentStrictReceiveOperation = Static<typeof StellarPathPaymentStrictReceiveOperation>;
export declare const StellarPathPaymentStrictReceiveOperation: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"pathPaymentStrictReceive">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    sendAsset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    sendMax: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    destination: import("@sinclair/typebox").TString;
    destAsset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    destAmount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    path: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>>;
}>;
export type StellarPathPaymentStrictSendOperation = Static<typeof StellarPathPaymentStrictSendOperation>;
export declare const StellarPathPaymentStrictSendOperation: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"pathPaymentStrictSend">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    sendAsset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    sendAmount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    destination: import("@sinclair/typebox").TString;
    destAsset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    destMin: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    path: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>>;
}>;
export type StellarPassiveSellOfferOperation = Static<typeof StellarPassiveSellOfferOperation>;
export declare const StellarPassiveSellOfferOperation: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"createPassiveSellOffer">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    buying: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    selling: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    price: import("@sinclair/typebox").TObject<{
        n: import("@sinclair/typebox").TNumber;
        d: import("@sinclair/typebox").TNumber;
    }>;
}>;
export type StellarManageSellOfferOperation = Static<typeof StellarManageSellOfferOperation>;
export declare const StellarManageSellOfferOperation: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"manageSellOffer">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    buying: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    selling: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    offerId: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
    price: import("@sinclair/typebox").TObject<{
        n: import("@sinclair/typebox").TNumber;
        d: import("@sinclair/typebox").TNumber;
    }>;
}>;
export type StellarManageBuyOfferOperation = Static<typeof StellarManageBuyOfferOperation>;
export declare const StellarManageBuyOfferOperation: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"manageBuyOffer">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    buying: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    selling: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    offerId: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
    price: import("@sinclair/typebox").TObject<{
        n: import("@sinclair/typebox").TNumber;
        d: import("@sinclair/typebox").TNumber;
    }>;
}>;
export type StellarSetOptionsOperation = Static<typeof StellarSetOptionsOperation>;
export declare const StellarSetOptionsOperation: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"setOptions">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    signer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TEnum<typeof PROTO.StellarSignerType>;
        key: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@trezor/schema-utils/lib/custom-types/buffer").TBuffer]>;
        weight: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>>;
    inflationDest: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    clearFlags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    setFlags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    masterWeight: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
    lowThreshold: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
    medThreshold: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
    highThreshold: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
    homeDomain: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export type StellarChangeTrustOperation = Static<typeof StellarChangeTrustOperation>;
export declare const StellarChangeTrustOperation: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"changeTrust">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    line: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    limit: import("@sinclair/typebox").TString;
}>;
export type StellarAllowTrustOperation = Static<typeof StellarAllowTrustOperation>;
export declare const StellarAllowTrustOperation: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"allowTrust">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    trustor: import("@sinclair/typebox").TString;
    assetCode: import("@sinclair/typebox").TString;
    assetType: import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>;
    authorize: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TUndefined]>>;
}>;
export type StellarAccountMergeOperation = Static<typeof StellarAccountMergeOperation>;
export declare const StellarAccountMergeOperation: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"accountMerge">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    destination: import("@sinclair/typebox").TString;
}>;
export type StellarManageDataOperation = Static<typeof StellarManageDataOperation>;
export declare const StellarManageDataOperation: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"manageData">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    name: import("@sinclair/typebox").TString;
    value: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@trezor/schema-utils/lib/custom-types/buffer").TBuffer]>>;
}>;
export type StellarBumpSequenceOperation = Static<typeof StellarBumpSequenceOperation>;
export declare const StellarBumpSequenceOperation: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"bumpSequence">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    bumpTo: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
}>;
export type StellarInflationOperation = Static<typeof StellarInflationOperation>;
export declare const StellarInflationOperation: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"inflation">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export type StellarClaimClaimableBalanceOperation = Static<typeof StellarClaimClaimableBalanceOperation>;
export declare const StellarClaimClaimableBalanceOperation: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"claimClaimableBalance">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    balanceId: import("@sinclair/typebox").TString;
}>;
export type StellarOperation = Static<typeof StellarOperation>;
export declare const StellarOperation: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"createAccount">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    destination: import("@sinclair/typebox").TString;
    startingBalance: import("@sinclair/typebox").TString;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"payment">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    destination: import("@sinclair/typebox").TString;
    asset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    amount: import("@sinclair/typebox").TString;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"pathPaymentStrictReceive">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    sendAsset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    sendMax: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    destination: import("@sinclair/typebox").TString;
    destAsset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    destAmount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    path: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"pathPaymentStrictSend">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    sendAsset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    sendAmount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    destination: import("@sinclair/typebox").TString;
    destAsset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    destMin: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    path: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"createPassiveSellOffer">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    buying: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    selling: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    price: import("@sinclair/typebox").TObject<{
        n: import("@sinclair/typebox").TNumber;
        d: import("@sinclair/typebox").TNumber;
    }>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"manageSellOffer">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    buying: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    selling: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    offerId: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
    price: import("@sinclair/typebox").TObject<{
        n: import("@sinclair/typebox").TNumber;
        d: import("@sinclair/typebox").TNumber;
    }>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"manageBuyOffer">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    buying: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    selling: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    offerId: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
    price: import("@sinclair/typebox").TObject<{
        n: import("@sinclair/typebox").TNumber;
        d: import("@sinclair/typebox").TNumber;
    }>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"setOptions">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    signer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TEnum<typeof PROTO.StellarSignerType>;
        key: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@trezor/schema-utils/lib/custom-types/buffer").TBuffer]>;
        weight: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>>;
    inflationDest: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    clearFlags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    setFlags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    masterWeight: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
    lowThreshold: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
    medThreshold: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
    highThreshold: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
    homeDomain: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"changeTrust">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    line: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    limit: import("@sinclair/typebox").TString;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"allowTrust">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    trustor: import("@sinclair/typebox").TString;
    assetCode: import("@sinclair/typebox").TString;
    assetType: import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>;
    authorize: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TUndefined]>>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"accountMerge">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    destination: import("@sinclair/typebox").TString;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"inflation">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"manageData">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    name: import("@sinclair/typebox").TString;
    value: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@trezor/schema-utils/lib/custom-types/buffer").TBuffer]>>;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"bumpSequence">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    bumpTo: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
}>, import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"claimClaimableBalance">;
    source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    balanceId: import("@sinclair/typebox").TString;
}>]>;
export type StellarTransaction = Static<typeof StellarTransaction>;
export declare const StellarTransaction: import("@sinclair/typebox").TObject<{
    source: import("@sinclair/typebox").TString;
    fee: import("@sinclair/typebox").TNumber;
    sequence: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    timebounds: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        minTime: import("@sinclair/typebox").TNumber;
        maxTime: import("@sinclair/typebox").TNumber;
    }>>;
    memo: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TEnum<typeof PROTO.StellarMemoType>;
        id: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
        text: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        hash: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@trezor/schema-utils/lib/custom-types/buffer").TBuffer]>>;
    }>>;
    operations: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"createAccount">;
        source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        destination: import("@sinclair/typebox").TString;
        startingBalance: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"payment">;
        source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        destination: import("@sinclair/typebox").TString;
        asset: import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
            code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        }>;
        amount: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"pathPaymentStrictReceive">;
        source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        sendAsset: import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
            code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        }>;
        sendMax: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
        destination: import("@sinclair/typebox").TString;
        destAsset: import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
            code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        }>;
        destAmount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
        path: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
            code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        }>>>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"pathPaymentStrictSend">;
        source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        sendAsset: import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
            code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        }>;
        sendAmount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
        destination: import("@sinclair/typebox").TString;
        destAsset: import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
            code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        }>;
        destMin: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
        path: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
            code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        }>>>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"createPassiveSellOffer">;
        source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        buying: import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
            code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        }>;
        selling: import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
            code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        }>;
        amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
        price: import("@sinclair/typebox").TObject<{
            n: import("@sinclair/typebox").TNumber;
            d: import("@sinclair/typebox").TNumber;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"manageSellOffer">;
        source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        buying: import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
            code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        }>;
        selling: import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
            code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        }>;
        amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
        offerId: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
        price: import("@sinclair/typebox").TObject<{
            n: import("@sinclair/typebox").TNumber;
            d: import("@sinclair/typebox").TNumber;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"manageBuyOffer">;
        source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        buying: import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
            code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        }>;
        selling: import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
            code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        }>;
        amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
        offerId: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
        price: import("@sinclair/typebox").TObject<{
            n: import("@sinclair/typebox").TNumber;
            d: import("@sinclair/typebox").TNumber;
        }>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"setOptions">;
        source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        signer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TEnum<typeof PROTO.StellarSignerType>;
            key: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@trezor/schema-utils/lib/custom-types/buffer").TBuffer]>;
            weight: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        }>>;
        inflationDest: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        clearFlags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        setFlags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        masterWeight: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
        lowThreshold: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
        medThreshold: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
        highThreshold: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
        homeDomain: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"changeTrust">;
        source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        line: import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
            code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        }>;
        limit: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"allowTrust">;
        source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        trustor: import("@sinclair/typebox").TString;
        assetCode: import("@sinclair/typebox").TString;
        assetType: import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>;
        authorize: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TUndefined]>>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"accountMerge">;
        source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        destination: import("@sinclair/typebox").TString;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"inflation">;
        source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"manageData">;
        source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        name: import("@sinclair/typebox").TString;
        value: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@trezor/schema-utils/lib/custom-types/buffer").TBuffer]>>;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"bumpSequence">;
        source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        bumpTo: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    }>, import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TLiteral<"claimClaimableBalance">;
        source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        balanceId: import("@sinclair/typebox").TString;
    }>]>>;
}>;
export type StellarSignTransaction = Static<typeof StellarSignTransaction>;
export declare const StellarSignTransaction: import("@sinclair/typebox").TObject<{
    path: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TNumber>]>;
    networkPassphrase: import("@sinclair/typebox").TString;
    transaction: import("@sinclair/typebox").TObject<{
        source: import("@sinclair/typebox").TString;
        fee: import("@sinclair/typebox").TNumber;
        sequence: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
        timebounds: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            minTime: import("@sinclair/typebox").TNumber;
            maxTime: import("@sinclair/typebox").TNumber;
        }>>;
        memo: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TEnum<typeof PROTO.StellarMemoType>;
            id: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
            text: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            hash: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@trezor/schema-utils/lib/custom-types/buffer").TBuffer]>>;
        }>>;
        operations: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<"createAccount">;
            source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            destination: import("@sinclair/typebox").TString;
            startingBalance: import("@sinclair/typebox").TString;
        }>, import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<"payment">;
            source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            destination: import("@sinclair/typebox").TString;
            asset: import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
                code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            }>;
            amount: import("@sinclair/typebox").TString;
        }>, import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<"pathPaymentStrictReceive">;
            source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            sendAsset: import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
                code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            }>;
            sendMax: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
            destination: import("@sinclair/typebox").TString;
            destAsset: import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
                code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            }>;
            destAmount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
            path: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
                code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            }>>>;
        }>, import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<"pathPaymentStrictSend">;
            source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            sendAsset: import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
                code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            }>;
            sendAmount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
            destination: import("@sinclair/typebox").TString;
            destAsset: import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
                code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            }>;
            destMin: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
            path: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
                code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            }>>>;
        }>, import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<"createPassiveSellOffer">;
            source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            buying: import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
                code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            }>;
            selling: import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
                code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            }>;
            amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
            price: import("@sinclair/typebox").TObject<{
                n: import("@sinclair/typebox").TNumber;
                d: import("@sinclair/typebox").TNumber;
            }>;
        }>, import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<"manageSellOffer">;
            source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            buying: import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
                code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            }>;
            selling: import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
                code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            }>;
            amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
            offerId: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
            price: import("@sinclair/typebox").TObject<{
                n: import("@sinclair/typebox").TNumber;
                d: import("@sinclair/typebox").TNumber;
            }>;
        }>, import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<"manageBuyOffer">;
            source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            buying: import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
                code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            }>;
            selling: import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
                code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            }>;
            amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
            offerId: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
            price: import("@sinclair/typebox").TObject<{
                n: import("@sinclair/typebox").TNumber;
                d: import("@sinclair/typebox").TNumber;
            }>;
        }>, import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<"setOptions">;
            source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            signer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TEnum<typeof PROTO.StellarSignerType>;
                key: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@trezor/schema-utils/lib/custom-types/buffer").TBuffer]>;
                weight: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            }>>;
            inflationDest: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            clearFlags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            setFlags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
            masterWeight: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
            lowThreshold: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
            medThreshold: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
            highThreshold: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
            homeDomain: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        }>, import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<"changeTrust">;
            source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            line: import("@sinclair/typebox").TObject<{
                type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>, import("@trezor/schema-utils/lib/custom-types/keyof-enum").TKeyOfEnum<typeof PROTO.StellarAssetType>]>;
                code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            }>;
            limit: import("@sinclair/typebox").TString;
        }>, import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<"allowTrust">;
            source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            trustor: import("@sinclair/typebox").TString;
            assetCode: import("@sinclair/typebox").TString;
            assetType: import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>;
            authorize: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TBoolean, import("@sinclair/typebox").TUndefined]>>;
        }>, import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<"accountMerge">;
            source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            destination: import("@sinclair/typebox").TString;
        }>, import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<"inflation">;
            source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        }>, import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<"manageData">;
            source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            name: import("@sinclair/typebox").TString;
            value: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@trezor/schema-utils/lib/custom-types/buffer").TBuffer]>>;
        }>, import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<"bumpSequence">;
            source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            bumpTo: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
        }>, import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TLiteral<"claimClaimableBalance">;
            source: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            balanceId: import("@sinclair/typebox").TString;
        }>]>>;
    }>;
}>;
export type StellarSignedTx = Static<typeof StellarSignedTx>;
export declare const StellarSignedTx: import("@sinclair/typebox").TObject<{
    publicKey: import("@sinclair/typebox").TString;
    signature: import("@sinclair/typebox").TString;
}>;
export type StellarOperationMessage = Static<typeof StellarOperationMessage>;
export declare const StellarOperationMessage: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"StellarCreateAccountOp">;
}>, import("@sinclair/typebox").TObject<{
    source_account: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    new_account: import("@sinclair/typebox").TString;
    starting_balance: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
}>]>, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"StellarPaymentOp">;
}>, import("@sinclair/typebox").TObject<{
    source_account: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    destination_account: import("@sinclair/typebox").TString;
    asset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>, import("@sinclair/typebox").TLiteral<2>, import("@sinclair/typebox").TLiteral<"NATIVE">, import("@sinclair/typebox").TLiteral<"ALPHANUM4">, import("@sinclair/typebox").TLiteral<"ALPHANUM12">]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
}>]>, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"StellarPathPaymentStrictReceiveOp">;
}>, import("@sinclair/typebox").TObject<{
    source_account: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    send_asset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>, import("@sinclair/typebox").TLiteral<2>, import("@sinclair/typebox").TLiteral<"NATIVE">, import("@sinclair/typebox").TLiteral<"ALPHANUM4">, import("@sinclair/typebox").TLiteral<"ALPHANUM12">]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    send_max: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    destination_account: import("@sinclair/typebox").TString;
    destination_asset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>, import("@sinclair/typebox").TLiteral<2>, import("@sinclair/typebox").TLiteral<"NATIVE">, import("@sinclair/typebox").TLiteral<"ALPHANUM4">, import("@sinclair/typebox").TLiteral<"ALPHANUM12">]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    destination_amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    paths: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>, import("@sinclair/typebox").TLiteral<2>, import("@sinclair/typebox").TLiteral<"NATIVE">, import("@sinclair/typebox").TLiteral<"ALPHANUM4">, import("@sinclair/typebox").TLiteral<"ALPHANUM12">]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>>;
}>]>, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"StellarPathPaymentStrictSendOp">;
}>, import("@sinclair/typebox").TObject<{
    source_account: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    send_asset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>, import("@sinclair/typebox").TLiteral<2>, import("@sinclair/typebox").TLiteral<"NATIVE">, import("@sinclair/typebox").TLiteral<"ALPHANUM4">, import("@sinclair/typebox").TLiteral<"ALPHANUM12">]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    send_amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    destination_account: import("@sinclair/typebox").TString;
    destination_asset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>, import("@sinclair/typebox").TLiteral<2>, import("@sinclair/typebox").TLiteral<"NATIVE">, import("@sinclair/typebox").TLiteral<"ALPHANUM4">, import("@sinclair/typebox").TLiteral<"ALPHANUM12">]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    destination_min: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    paths: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>, import("@sinclair/typebox").TLiteral<2>, import("@sinclair/typebox").TLiteral<"NATIVE">, import("@sinclair/typebox").TLiteral<"ALPHANUM4">, import("@sinclair/typebox").TLiteral<"ALPHANUM12">]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>>>;
}>]>, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"StellarManageSellOfferOp">;
}>, import("@sinclair/typebox").TObject<{
    source_account: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    selling_asset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>, import("@sinclair/typebox").TLiteral<2>, import("@sinclair/typebox").TLiteral<"NATIVE">, import("@sinclair/typebox").TLiteral<"ALPHANUM4">, import("@sinclair/typebox").TLiteral<"ALPHANUM12">]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    buying_asset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>, import("@sinclair/typebox").TLiteral<2>, import("@sinclair/typebox").TLiteral<"NATIVE">, import("@sinclair/typebox").TLiteral<"ALPHANUM4">, import("@sinclair/typebox").TLiteral<"ALPHANUM12">]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    price_n: import("@sinclair/typebox").TNumber;
    price_d: import("@sinclair/typebox").TNumber;
    offer_id: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
}>]>, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"StellarManageBuyOfferOp">;
}>, import("@sinclair/typebox").TObject<{
    source_account: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    selling_asset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>, import("@sinclair/typebox").TLiteral<2>, import("@sinclair/typebox").TLiteral<"NATIVE">, import("@sinclair/typebox").TLiteral<"ALPHANUM4">, import("@sinclair/typebox").TLiteral<"ALPHANUM12">]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    buying_asset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>, import("@sinclair/typebox").TLiteral<2>, import("@sinclair/typebox").TLiteral<"NATIVE">, import("@sinclair/typebox").TLiteral<"ALPHANUM4">, import("@sinclair/typebox").TLiteral<"ALPHANUM12">]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    price_n: import("@sinclair/typebox").TNumber;
    price_d: import("@sinclair/typebox").TNumber;
    offer_id: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
}>]>, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"StellarCreatePassiveSellOfferOp">;
}>, import("@sinclair/typebox").TObject<{
    source_account: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    selling_asset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>, import("@sinclair/typebox").TLiteral<2>, import("@sinclair/typebox").TLiteral<"NATIVE">, import("@sinclair/typebox").TLiteral<"ALPHANUM4">, import("@sinclair/typebox").TLiteral<"ALPHANUM12">]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    buying_asset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>, import("@sinclair/typebox").TLiteral<2>, import("@sinclair/typebox").TLiteral<"NATIVE">, import("@sinclair/typebox").TLiteral<"ALPHANUM4">, import("@sinclair/typebox").TLiteral<"ALPHANUM12">]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    amount: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
    price_n: import("@sinclair/typebox").TNumber;
    price_d: import("@sinclair/typebox").TNumber;
}>]>, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"StellarSetOptionsOp">;
}>, import("@sinclair/typebox").TObject<{
    source_account: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    inflation_destination_account: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    clear_flags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    set_flags: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    master_weight: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
    low_threshold: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
    medium_threshold: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
    high_threshold: import("@sinclair/typebox").TOptional<import("@trezor/schema-utils/lib/custom-types/uint").TUint>;
    home_domain: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    signer_type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TEnum<typeof PROTO.StellarSignerType>>;
    signer_key: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@trezor/schema-utils/lib/custom-types/buffer").TBuffer, import("@sinclair/typebox").TString]>>;
    signer_weight: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
}>]>, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"StellarChangeTrustOp">;
}>, import("@sinclair/typebox").TObject<{
    source_account: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    asset: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TLiteral<0>, import("@sinclair/typebox").TLiteral<1>, import("@sinclair/typebox").TLiteral<2>, import("@sinclair/typebox").TLiteral<"NATIVE">, import("@sinclair/typebox").TLiteral<"ALPHANUM4">, import("@sinclair/typebox").TLiteral<"ALPHANUM12">]>;
        code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        issuer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    limit: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
}>]>, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"StellarAllowTrustOp">;
}>, import("@sinclair/typebox").TObject<{
    source_account: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    trusted_account: import("@sinclair/typebox").TString;
    asset_type: import("@sinclair/typebox").TEnum<typeof PROTO.StellarAssetType>;
    asset_code: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    is_authorized: import("@sinclair/typebox").TBoolean;
}>]>, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"StellarAccountMergeOp">;
}>, import("@sinclair/typebox").TObject<{
    source_account: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    destination_account: import("@sinclair/typebox").TString;
}>]>, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"StellarManageDataOp">;
}>, import("@sinclair/typebox").TObject<{
    source_account: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    key: import("@sinclair/typebox").TString;
    value: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TUnion<[import("@trezor/schema-utils/lib/custom-types/buffer").TBuffer, import("@sinclair/typebox").TString]>>;
}>]>, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"StellarBumpSequenceOp">;
}>, import("@sinclair/typebox").TObject<{
    source_account: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    bump_to: import("@trezor/schema-utils/lib/custom-types/uint").TUint;
}>]>, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TLiteral<"StellarClaimClaimableBalanceOp">;
}>, import("@sinclair/typebox").TObject<{
    source_account: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    balance_id: import("@sinclair/typebox").TString;
}>]>]>;
//# sourceMappingURL=index.d.ts.map