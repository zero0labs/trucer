import { Static } from '@trezor/schema-utils';
export type TezosRevealOperation = Static<typeof TezosRevealOperation>;
export declare const TezosRevealOperation: import("@sinclair/typebox").TObject<{
    source: import("@sinclair/typebox").TString;
    fee: import("@sinclair/typebox").TNumber;
    counter: import("@sinclair/typebox").TNumber;
    gas_limit: import("@sinclair/typebox").TNumber;
    storage_limit: import("@sinclair/typebox").TNumber;
    public_key: import("@sinclair/typebox").TString;
}>;
export type TezosManagerTransfer = Static<typeof TezosManagerTransfer>;
export declare const TezosManagerTransfer: import("@sinclair/typebox").TObject<{
    destination: import("@sinclair/typebox").TString;
    amount: import("@sinclair/typebox").TNumber;
}>;
export type TezosParametersManager = Static<typeof TezosParametersManager>;
export declare const TezosParametersManager: import("@sinclair/typebox").TObject<{
    set_delegate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    cancel_delegate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    transfer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        destination: import("@sinclair/typebox").TString;
        amount: import("@sinclair/typebox").TNumber;
    }>>;
}>;
export type TezosTransactionOperation = Static<typeof TezosTransactionOperation>;
export declare const TezosTransactionOperation: import("@sinclair/typebox").TObject<{
    source: import("@sinclair/typebox").TString;
    destination: import("@sinclair/typebox").TString;
    amount: import("@sinclair/typebox").TNumber;
    counter: import("@sinclair/typebox").TNumber;
    fee: import("@sinclair/typebox").TNumber;
    gas_limit: import("@sinclair/typebox").TNumber;
    storage_limit: import("@sinclair/typebox").TNumber;
    parameters: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TNumber>>;
    parameters_manager: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        set_delegate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        cancel_delegate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
        transfer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            destination: import("@sinclair/typebox").TString;
            amount: import("@sinclair/typebox").TNumber;
        }>>;
    }>>;
}>;
export type TezosOriginationOperation = Static<typeof TezosOriginationOperation>;
export declare const TezosOriginationOperation: import("@sinclair/typebox").TObject<{
    source: import("@sinclair/typebox").TString;
    balance: import("@sinclair/typebox").TNumber;
    delegate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    script: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TNumber>]>;
    fee: import("@sinclair/typebox").TNumber;
    counter: import("@sinclair/typebox").TNumber;
    gas_limit: import("@sinclair/typebox").TNumber;
    storage_limit: import("@sinclair/typebox").TNumber;
}>;
export type TezosDelegationOperation = Static<typeof TezosDelegationOperation>;
export declare const TezosDelegationOperation: import("@sinclair/typebox").TObject<{
    source: import("@sinclair/typebox").TString;
    delegate: import("@sinclair/typebox").TString;
    fee: import("@sinclair/typebox").TNumber;
    counter: import("@sinclair/typebox").TNumber;
    gas_limit: import("@sinclair/typebox").TNumber;
    storage_limit: import("@sinclair/typebox").TNumber;
}>;
export type TezosOperation = Static<typeof TezosOperation>;
export declare const TezosOperation: import("@sinclair/typebox").TObject<{
    reveal: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        source: import("@sinclair/typebox").TString;
        fee: import("@sinclair/typebox").TNumber;
        counter: import("@sinclair/typebox").TNumber;
        gas_limit: import("@sinclair/typebox").TNumber;
        storage_limit: import("@sinclair/typebox").TNumber;
        public_key: import("@sinclair/typebox").TString;
    }>>;
    transaction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        source: import("@sinclair/typebox").TString;
        destination: import("@sinclair/typebox").TString;
        amount: import("@sinclair/typebox").TNumber;
        counter: import("@sinclair/typebox").TNumber;
        fee: import("@sinclair/typebox").TNumber;
        gas_limit: import("@sinclair/typebox").TNumber;
        storage_limit: import("@sinclair/typebox").TNumber;
        parameters: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TNumber>>;
        parameters_manager: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            set_delegate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            cancel_delegate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
            transfer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
                destination: import("@sinclair/typebox").TString;
                amount: import("@sinclair/typebox").TNumber;
            }>>;
        }>>;
    }>>;
    origination: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        source: import("@sinclair/typebox").TString;
        balance: import("@sinclair/typebox").TNumber;
        delegate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        script: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TNumber>]>;
        fee: import("@sinclair/typebox").TNumber;
        counter: import("@sinclair/typebox").TNumber;
        gas_limit: import("@sinclair/typebox").TNumber;
        storage_limit: import("@sinclair/typebox").TNumber;
    }>>;
    delegation: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
        source: import("@sinclair/typebox").TString;
        delegate: import("@sinclair/typebox").TString;
        fee: import("@sinclair/typebox").TNumber;
        counter: import("@sinclair/typebox").TNumber;
        gas_limit: import("@sinclair/typebox").TNumber;
        storage_limit: import("@sinclair/typebox").TNumber;
    }>>;
}>;
export type TezosSignTransaction = Static<typeof TezosSignTransaction>;
export declare const TezosSignTransaction: import("@sinclair/typebox").TObject<{
    path: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TNumber>]>;
    branch: import("@sinclair/typebox").TString;
    operation: import("@sinclair/typebox").TObject<{
        reveal: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            source: import("@sinclair/typebox").TString;
            fee: import("@sinclair/typebox").TNumber;
            counter: import("@sinclair/typebox").TNumber;
            gas_limit: import("@sinclair/typebox").TNumber;
            storage_limit: import("@sinclair/typebox").TNumber;
            public_key: import("@sinclair/typebox").TString;
        }>>;
        transaction: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            source: import("@sinclair/typebox").TString;
            destination: import("@sinclair/typebox").TString;
            amount: import("@sinclair/typebox").TNumber;
            counter: import("@sinclair/typebox").TNumber;
            fee: import("@sinclair/typebox").TNumber;
            gas_limit: import("@sinclair/typebox").TNumber;
            storage_limit: import("@sinclair/typebox").TNumber;
            parameters: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TNumber>>;
            parameters_manager: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
                set_delegate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
                cancel_delegate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
                transfer: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
                    destination: import("@sinclair/typebox").TString;
                    amount: import("@sinclair/typebox").TNumber;
                }>>;
            }>>;
        }>>;
        origination: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            source: import("@sinclair/typebox").TString;
            balance: import("@sinclair/typebox").TNumber;
            delegate: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
            script: import("@sinclair/typebox").TUnion<[import("@sinclair/typebox").TString, import("@sinclair/typebox").TArray<import("@sinclair/typebox").TNumber>]>;
            fee: import("@sinclair/typebox").TNumber;
            counter: import("@sinclair/typebox").TNumber;
            gas_limit: import("@sinclair/typebox").TNumber;
            storage_limit: import("@sinclair/typebox").TNumber;
        }>>;
        delegation: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TObject<{
            source: import("@sinclair/typebox").TString;
            delegate: import("@sinclair/typebox").TString;
            fee: import("@sinclair/typebox").TNumber;
            counter: import("@sinclair/typebox").TNumber;
            gas_limit: import("@sinclair/typebox").TNumber;
            storage_limit: import("@sinclair/typebox").TNumber;
        }>>;
    }>;
    chunkify: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
}>;
//# sourceMappingURL=index.d.ts.map