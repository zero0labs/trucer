import { PROTO } from '../constants';
import type { CoinInfo, DerivationPath, ProtoWithDerivationPath, ProtoWithAddressN } from '../types';
export declare const HD_HARDENED = 2147483648;
export declare const toHardened: (n: number) => number;
export declare const fromHardened: (n: number) => number;
export declare const getSlip44ByPath: (path: number[]) => number;
export declare const getHDPath: (path: string) => number[];
export declare const isSegwitPath: (path: number[] | undefined) => boolean;
export declare const isBech32Path: (path: number[] | undefined) => boolean;
export declare const isTaprootPath: (path: number[] | undefined) => boolean;
export declare const getAccountType: (path: number[] | undefined) => "p2pkh" | "p2sh" | "p2tr" | "p2wpkh";
export declare const getScriptType: (path: number[] | undefined) => PROTO.InternalInputScriptType | undefined;
export declare const getOutputScriptType: (path?: number[]) => PROTO.ChangeOutputScriptType | undefined;
export declare const validatePath: (path: DerivationPath, length?: number, base?: boolean) => number[];
export declare const getSerializedPath: (path: number[]) => string;
export declare const getPathFromIndex: (bip44purpose: number, bip44cointype: number, index: number) => number[];
export declare const getIndexFromPath: (path: number[]) => number;
export declare const fixPath: <T extends ProtoWithDerivationPath<({
    sequence?: number | undefined;
    multisig?: {
        address_n?: number[] | undefined;
        nodes?: {
            private_key?: string | undefined;
            public_key: string;
            depth: number;
            fingerprint: number;
            child_num: number;
            chain_code: string;
        }[] | undefined;
        pubkeys: {
            address_n: number[];
            node: string | {
                private_key?: string | undefined;
                public_key: string;
                depth: number;
                fingerprint: number;
                child_num: number;
                chain_code: string;
            };
        }[];
        signatures: string[];
        m: number;
    } | undefined;
    decred_tree?: number | undefined;
    orig_hash?: string | undefined;
    orig_index?: number | undefined;
    decred_staking_spend?: PROTO.DecredStakingSpendType | undefined;
    script_pubkey?: string | undefined;
    coinjoin_flags?: number | undefined;
    script_sig?: string | undefined;
    witness?: string | undefined;
    ownership_proof?: string | undefined;
    commitment_data?: string | undefined;
    amount: string | number;
    prev_hash: string;
    prev_index: number;
} & {
    script_type?: "SPENDADDRESS" | "SPENDMULTISIG" | "SPENDWITNESS" | "SPENDP2SHWITNESS" | "SPENDTAPROOT" | undefined;
    address_n: number[];
}) | ({
    sequence?: number | undefined;
    multisig?: {
        address_n?: number[] | undefined;
        nodes?: {
            private_key?: string | undefined;
            public_key: string;
            depth: number;
            fingerprint: number;
            child_num: number;
            chain_code: string;
        }[] | undefined;
        pubkeys: {
            address_n: number[];
            node: string | {
                private_key?: string | undefined;
                public_key: string;
                depth: number;
                fingerprint: number;
                child_num: number;
                chain_code: string;
            };
        }[];
        signatures: string[];
        m: number;
    } | undefined;
    decred_tree?: number | undefined;
    orig_hash?: string | undefined;
    orig_index?: number | undefined;
    decred_staking_spend?: PROTO.DecredStakingSpendType | undefined;
    script_pubkey?: string | undefined;
    coinjoin_flags?: number | undefined;
    script_sig?: string | undefined;
    witness?: string | undefined;
    ownership_proof?: string | undefined;
    commitment_data?: string | undefined;
    amount: string | number;
    prev_hash: string;
    prev_index: number;
} & {
    address_n?: undefined;
    script_pubkey: string;
    script_type: "EXTERNAL";
})> | ProtoWithDerivationPath<{
    address_n?: undefined;
    multisig?: {
        address_n?: number[] | undefined;
        nodes?: {
            private_key?: string | undefined;
            public_key: string;
            depth: number;
            fingerprint: number;
            child_num: number;
            chain_code: string;
        }[] | undefined;
        pubkeys: {
            address_n: number[];
            node: string | {
                private_key?: string | undefined;
                public_key: string;
                depth: number;
                fingerprint: number;
                child_num: number;
                chain_code: string;
            };
        }[];
        signatures: string[];
        m: number;
    } | undefined;
    orig_hash?: string | undefined;
    orig_index?: number | undefined;
    payment_req_index?: number | undefined;
    address: string;
    amount: string | number;
    script_type: "PAYTOADDRESS";
} | {
    address?: undefined;
    multisig?: {
        address_n?: number[] | undefined;
        nodes?: {
            private_key?: string | undefined;
            public_key: string;
            depth: number;
            fingerprint: number;
            child_num: number;
            chain_code: string;
        }[] | undefined;
        pubkeys: {
            address_n: number[];
            node: string | {
                private_key?: string | undefined;
                public_key: string;
                depth: number;
                fingerprint: number;
                child_num: number;
                chain_code: string;
            };
        }[];
        signatures: string[];
        m: number;
    } | undefined;
    orig_hash?: string | undefined;
    orig_index?: number | undefined;
    script_type?: "PAYTOADDRESS" | "PAYTOSCRIPTHASH" | "PAYTOMULTISIG" | "PAYTOWITNESS" | "PAYTOP2SHWITNESS" | "PAYTOTAPROOT" | undefined;
    payment_req_index?: number | undefined;
    address_n: number[];
    amount: string | number;
} | {
    address_n?: undefined;
    multisig?: {
        address_n?: number[] | undefined;
        nodes?: {
            private_key?: string | undefined;
            public_key: string;
            depth: number;
            fingerprint: number;
            child_num: number;
            chain_code: string;
        }[] | undefined;
        pubkeys: {
            address_n: number[];
            node: string | {
                private_key?: string | undefined;
                public_key: string;
                depth: number;
                fingerprint: number;
                child_num: number;
                chain_code: string;
            };
        }[];
        signatures: string[];
        m: number;
    } | undefined;
    orig_hash?: string | undefined;
    orig_index?: number | undefined;
    script_type?: "PAYTOADDRESS" | "PAYTOSCRIPTHASH" | "PAYTOMULTISIG" | "PAYTOWITNESS" | "PAYTOP2SHWITNESS" | "PAYTOTAPROOT" | undefined;
    payment_req_index?: number | undefined;
    address: string;
    amount: string | number;
} | {
    address_n?: undefined;
    address?: undefined;
    orig_hash?: string | undefined;
    orig_index?: number | undefined;
    payment_req_index?: number | undefined;
    amount: 0 | "0";
    script_type: "PAYTOOPRETURN";
    op_return_data: string;
}>>(utxo: T) => ProtoWithAddressN<T>;
export declare const getLabel: (label: string, coinInfo?: CoinInfo) => string;
//# sourceMappingURL=pathUtils.d.ts.map